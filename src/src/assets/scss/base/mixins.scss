// Responsive value
@mixin responsiveValue(
  $property,
  $startSize,
  $minSize,
  $type: 1,
  $widthFrom: $maxWidth,
  $widthTo: $minWidth
) {
  // For calc();
  $addSize: calc(($startSize - $minSize) / 16);

  $calcSize: calc(
    #{rem($minSize)} + #{$addSize} * (100vw - #{rem($widthTo)}) / #{calc(
        $widthFrom / 16
      ) - calc($widthTo / 16)}
  );

  // If there is less container
  @if $type == 1 {
    #{$property}: rem($startSize);

    @media (max-width: rem($widthFrom)) {
      #{$property}: $calcSize;
    }
  }
  // If there is more container
  @else if $type == 2 {
    #{$property}: rem($startSize);

    @media (min-width: rem($widthFrom)) {
      #{$property}: $calcSize;
    }
  }
  // Always
  @else {
    #{$property}: $calcSize;
  }
}

// Connecting font
@mixin font($fontName, $fileName: $fontName, $weight: 400, $style: normal) {
  @font-face {
    font-family: $fontName;
    font-display: swap;
    src: url("../../fonts/#{$fontName}/#{$fontName}.woff2") format("woff2"),
      url("../../fonts/#{$fontName}/#{$fontName}.woff") format("woff");
    font-weight: $weight;
    font-style: $style;
  }
}

@mixin responsiveObject {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

@mixin nowrap {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin verticalText {
  transform: rotate(-180);
  writing-mode: vertical-lr;
  text-orientation: upright;
}
