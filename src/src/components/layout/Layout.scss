@import "Header/Header.scss";
@import "ScrollTop/ScrollTop.scss";
@import "Footer/Footer.scss";

// Scrollbar styles
::-webkit-scrollbar {
  width: rem(10);
  background-color: #f1f1f1;

  @media (prefers-color-scheme: dark) {
    background-color: #424242;
  }

  &-thumb {
    border-radius: rem(5);
    background-color: #a3a3a3;

    @media (prefers-color-scheme: dark) {
      background-color: #808080;
    }
  }
}

// Body tag styles
body {
  // Lock scroll
  &.lock {
    overflow: hidden;
    touch-action: none;
    overscroll-behavior: none;
  }
}

// Shell wrapper
.app {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;

  @supports (overflow: clip) {
    overflow: clip;
  }

  // Press the footer
  > main {
    flex: 1 1 auto;
  }
}

// Limiting container

// Responsive
@if $adaptiveType == 1 {
  [class*="__container"] {
    @if $maxWidthContainer > 0 {
      max-width: rem($containerWidth);
      margin: 0 auto;
    }

    @if $containerPadding > 0 {
      @if $maxWidthContainer > 0 {
        padding-left: rem(calc($containerPadding / 2));
        padding-right: rem(calc($containerPadding / 2));
      } @else {
        @include responsiveValue(padding-left, calc($containerPadding / 2), 15);
        @include responsiveValue(
          padding-right,
          calc($containerPadding / 2),
          15
        );
      }
    }
  }
}
// According to breakpoints
@else {
  [class*="__container"] {
    margin: 0 auto;

    @if $maxWidthContainer > 0 {
      max-width: rem($containerWidth);
    } @else {
      @if $containerPadding > 0 {
        padding-left: rem(calc($containerPadding / 2));
        padding-right: rem(calc($containerPadding / 2));
      }
    }

    @media (max-width: $pc) {
      max-width: rem(970);
    }

    @media (max-width: $tablet) {
      max-width: rem(750);
    }

    @media (max-width: $mobile) {
      max-width: none;
    }

    @if $containerPadding > 0 and $maxWidthContainer > 0 {
      padding-left: rem(calc($containerPadding / 2));
      padding-right: rem(calc($containerPadding / 2));
    }
  }
}
